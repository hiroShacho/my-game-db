
引継ぎ書：my-game-db プロジェクト

---

【プロジェクト概要】

プロジェクト名: my-game-db
目的:ゲーム「幻塔(Tower of Fntasy)」の攻略サイトの代替となるデータベースを作る。
　　 探索マップや武器などのゲーム内アイテムの各種一覧と、
　　 入力フォームからのユーザーの入力を基にしたサイト内検索、
　　 各種アイテムなどについているタグを基に検索できるタグ検索機能などを使えるようにして、新規～古参プレイヤーまで使えるサイトを作る。
対象項目: 武器 / 凸効果 / スキル / ボリション / アバター特性 / アルケー
技術構成: Next.js / TypeScript / JSON
表示原則: JSON全文表示・タグは改行禁止・UIの見た目の変更は一切禁止

---

【作業履歴】

1. 型定義の整理と types/index.ts への統合
- Weapon, Skill, Matrix, Relic, Trait を構造的に再設計
- スキルID等は "s_101" 形式で統一

2. ItemCard.tsx の型適用
- ItemCardProps を導入し型安全化
- null/undefined セーフガード処理を導入（ただし一部エラー再発）
- UIレイアウトの変更は禁止

3. タグ検索 tag-search.tsx の改修と差戻し
- 大項目選択→タグ抽出→AND/OR検索→結果表示の構造
- 初期タグ全取得方式が重く、OR/AND切替UIが消失
- 差し戻し済み（tag-search_backup.tsx を採用）

4. ItemCard の map でエラーが起こる件
- 原因: スキル・ボリションなどの undefined を map しようとした
- 対応: map の前に null チェックを入れる必要あり

---

【ソース構成（抜粋）】

- components/ItemCard.tsx：カード表示
- pages/tag-search.tsx：タグ検索ページ
- data/*.json：武器、スキル、ボリション、アルケー、アバター特性データ
- types/index.ts：型定義統合

---

【現在の課題・引継ぎポイント】

1. ItemCard.tsx の null-safe 対応が未完
2. tag-search.tsx のタグ選択時の重さが異常（最適化未完）
3. UIレイアウトに変更を加えないこと（原則）
4. 型適用の不足と、全体的な null/undefined 安全対策が必要

---

【次にやるべき作業】

1. ItemCard.tsx で map 前の null チェックを徹底
2. tag-search.tsx の軽量化（表示数制限・遅延ロードなど）
3. 型定義の完全適用（props など）
4. Vercel/ローカル両対応でのビルド検証

---

【補足】

- UI改変は原則禁止（見た目維持）
- タグ検索の重さは描画最適化（useMemo、非同期、表示遅延）で改善可能
- コンポーネント分離などは要相談

---

【重要ファイル】

- tag-search_backup.tsx：差し戻し済の最新版
- ItemCard.tsx：手動型適用中（未完）

---
